pipeline {
  agent any

  tools{
    maven 'maven 3.6.1'
  }
  stages{
    stage("build"){
      when{
          changeset "**/worker/**"
      }
      steps{
          echo 'Compiling worker app'
          dir('worker'){
            sh 'mvn compile'
          }
      }
    }
    stage("test"){
      when{
          changeset "**/worker/**"
      }
      steps{
        echo 'Running Unit Tets on worker app'
        dir('worker'){
            sh 'mvn clean test'
        }
      }
    }
    stage("package"){
      when{
          branch 'master'
          changeset "**/worker/**"
      }
      steps{
        echo 'Packaging worker app'
        dir('worker'){
            sh 'mvn package -DskipTests'
        }
      }
    }
    
    stage('docker-package'){
        agent any
        steps{
            echo 'Packaging worker app with docker'
            script{
                docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                    def workerImage = docker.build("ilosaurus/worker:v${env.BUILD_ID}", "./worker")
                    workerImage.push()
                    workerImage.push("latest")
                }
            }
        }
    }
    
    
  }

  post{
      always {
        echo 'Building multibranch pipeline for worker is completed..'
      }
      failure {
          slackSend (channel: "jenkins-cicd", message: "Build Failed - Ilham - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
      }
      success {
          slackSend (channel: "jenkins-cicd", message: "Build Succeeded - Ilham - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
      }
    }

  }
